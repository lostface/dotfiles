// Place your settings in this file to overwrite the default settings
{
  // Columns at which to show vertical rulers
  "editor.rulers": [80, 120, 160],

  // The number of spaces a tab is equal to. This setting is overriden based on the file contents when `editor.detectIndentation` is on.
  "editor.tabSize": 2,

  // Controls if the minimap is shown
  "editor.minimap.enabled": true,

  // Controls how lines should wrap. Can be:
  //  - 'off' (disable wrapping),
  //  - 'on' (viewport wrapping),
  //  - 'wordWrapColumn' (wrap at `editor.wordWrapColumn`) or
  //  - 'bounded' (wrap at minimum of viewport and `editor.wordWrapColumn`).
  "editor.wordWrap": "off",

  // Controls the wrapping column of the editor when `editor.wordWrap` is 'wordWrapColumn' or 'bounded'.
  "editor.wordWrapColumn": 160,

  // Controls if the editor should automatically close brackets after opening them
  "editor.autoClosingBrackets": true,

  // Controls whether the editor should render indent guides
  "editor.renderIndentGuides": true,

  // Controls if suggestions should automatically show up while typing
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },

  // Controls the position of the editor's tabs close buttons or disables them when set to 'off'.
  "workbench.editor.tabCloseButton": "right",

  // Controls where editors open. Select 'left' or 'right' to open editors to the left or right of the current active one. Select 'first' or 'last' to open editors independently from the currently active one.
  "workbench.editor.openPositioning": "last",

  // Controls if opened editors from Quick Open show as preview. Preview editors are reused until they are kept (e.g. via double click or editing).
  "workbench.editor.enablePreviewFromQuickOpen": false,

  // Controls if editors showing a file should close automatically when the file is deleted or renamed by some other process. Disabling this will keep the editor open as dirty on such an event. Note that deleting from within the application will always close the editor and that dirty files will never close to preserve your data.
  "workbench.editor.closeOnFileDelete": false,

  // Controls if an editor is revealed in any of the visible groups if opened. If disabled, an editor will prefer to open in the currently active editor group. If enabled, an already opened editor will be revealed instead of opened again in the currently active editor group. Note that there are some cases where this setting is ignored, e.g. when forcing an editor to open in a specific group or to the side of the currently active group.
  "workbench.editor.revealIfOpen": true,

  // Controls if Quick Open should close automatically once it loses focus.
  "workbench.quickOpen.closeOnFocusLost": false,

  // Controls the dimensions of opening a new window. By default, a new window will open in the center of the screen with small dimensions. When set to  'inherit', the window will get the same dimensions as the last active one. When set to 'maximized', the window will open maximized and fullscreen if configured to 'fullscreen'.
  "window.newWindowDimensions": "inherit",

  // When enabled, will trim trailing whitespace when saving a file.
  "files.trimTrailingWhitespace": true,

  // When enabled, insert a final new line at the end of the file when saving it.
  "files.insertFinalNewline": true,

  // Controls auto save of dirty files. Accepted values:  "off", "afterDelay", "onFocusChange" (editor loses focus), "onWindowChange" (window loses focus). If set to "afterDelay", you can configure the delay in "files.autoSaveDelay".
  "files.autoSave": "onFocusChange",

  // Number of editors shown in the Open Editors pane. Set it to 0 to hide the pane.
  "explorer.openEditors.visible": 0,

  // Controls if the explorer should automatically reveal and select files when opening them.
  "explorer.autoReveal": true,

  // Controls CSS validation and problem severities.
  // Enables or disables all validations
  "css.validate": true,

  // Controls SCSS validation and problem severities.
  // Enables or disables all validations
  "scss.validate": true,

  // Controls LESS validation and problem severities.
  // Enables or disables all validations
  "less.validate": true,

  // Configures if the built-in HTML language support suggests Angular V1 tags and properties.
  "html.suggest.angular1": false,

  // Configures if the built-in HTML language support suggests Ionic tags, properties and values.
  "html.suggest.ionic": false,

  // Configures if the built-in HTML language support validates embedded scripts.
  "html.validate.scripts": true,

  // Configures if the built-in HTML language support validates embedded styles.
  "html.validate.styles": true,

  // Enable/disable TypeScript validation.
  "typescript.validate.enable": false,

  // Enable/disable default TypeScript formatter.
  "typescript.format.enable": false,

  // Enable/disable implementations CodeLens. Requires TypeScript >= 2.2.0.
  "typescript.implementationsCodeLens.enabled": false,

  // Enable/disable JavaScript validation.
  "javascript.validate.enable": true,

  // Enable/disable default JavaScript formatter.
  "javascript.format.enable": true,

  // Enable/disable built-in PHP validation.
  "php.validate.enable": false,

  // Automatically update extensions
  "extensions.autoUpdate": true,

  // Control whether htmlhint is enabled for HTML files or not.
  "htmlhint.enable": true,

  // Control whether tslint is enabled for TypeScript files or not.
  "tslint.enable": false,

  // Control whether tslint is enabled for JavaScript files or not.
  "tslint.jsEnable": true,

  // Controls whether eslint is enabled for JavaScript files or not.
  "eslint.enable": false,

  // For import command. The declaration type used for require()
  "npm-intellisense.importDeclarationType": "let",

  // Specifies folders to be ignored. (node_modules for example), improving search performance
  "gitProjectManager.ignoredFolders": ["node_modules"],

  // Specifies the base folders to search for git repositories
  "gitProjectManager.baseProjectsFolders": [
    "C:/dev"
  ],

  // Specifies whether saves repository folders' data between sessions
  "gitProjectManager.storeRepositoriesBetweenSessions": true,

  // Indicate the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit
  "gitProjectManager.maxDepthRecursion": 7,

  // Number of recent projects to be kept to use with GPM - Open Recent
  "gitProjectManager.recentProjectsListSize": 7,

  // Enable crash reports to be sent to Microsoft.
  // This option requires restart to take effect.
  "telemetry.enableCrashReporter": false,

  // Enable usage data and errors to be sent to Microsoft.
  "telemetry.enableTelemetry": false,
  "workbench.iconTheme": "vs-seti",
  "terminal.integrated.shell.windows": "C:\\Windows\\Sysnative\\WindowsPowerShell\\v1.0\\powershell.exe",
  "window.zoomLevel": 0
}
